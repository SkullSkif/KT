Terminals unused in grammar

    INHERITS
    LOOP
    POOL
    WHILE
    ERROR


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class
    4           | error ';' class

    5 class: CLASS TYPEID '{' feature_list '}' ';'

    6 feature_list: ε
    7             | feature_list feature

    8 feature: OBJECTID ':' TYPEID optional_assign ';'
    9        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' ';'
   10        | error ';'

   11 formal_list: ε
   12            | formal
   13            | formal_list ',' formal

   14 formal: OBJECTID ':' TYPEID

   15 expr_list_comma: ε
   16                | expr
   17                | expr_list_comma ',' expr

   18 expr_list_simicolon: expr ';'
   19                    | expr_list_simicolon expr ';'
   20                    | error ';'

   21 expr: STR_CONST
   22     | INT_CONST
   23     | BOOL_CONST
   24     | OBJECTID
   25     | OBJECTID ASSIGN expr
   26     | expr '.' OBJECTID '(' expr_list_comma ')'
   27     | OBJECTID '(' expr_list_comma ')'
   28     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   29     | IF expr THEN expr ELSE expr FI
   30     | '{' expr_list_simicolon '}'
   31     | let_expr
   32     | CASE expr OF case_list ESAC
   33     | NEW TYPEID
   34     | ISVOID expr
   35     | expr '+' expr
   36     | expr '-' expr
   37     | expr '*' expr
   38     | '~' expr
   39     | expr '<' expr
   40     | expr '=' expr
   41     | expr LE expr
   42     | NOT expr
   43     | '(' expr ')'

   44 case_list: ε
   45          | case_list case

   46 case: OBJECTID ':' TYPEID DARROW expr ';'

   47 let_expr: LET let_binding_list IN expr

   48 let_binding_list: let_binding
   49                 | let_binding_list ',' let_binding
   50                 | error ',' let_binding

   51 let_binding: OBJECTID ':' TYPEID optional_assign

   52 optional_assign: ε
   53                | ASSIGN expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 26 27 28 43
    ')' (41) 9 26 27 28 43
    '*' (42) 37
    '+' (43) 35
    ',' (44) 13 17 49 50
    '-' (45) 36
    '.' (46) 26 28
    ':' (58) 8 9 14 46 51
    ';' (59) 4 5 8 9 10 18 19 20 46
    '<' (60) 39
    '=' (61) 40
    '@' (64) 28
    '{' (123) 5 9 30
    '}' (125) 5 9 30
    '~' (126) 38
    error (256) 4 10 20 50
    CLASS (258) 5
    ELSE (259) 29
    FI (260) 29
    IF (261) 29
    IN (262) 47
    INHERITS (263)
    LET (264) 47
    LOOP (265)
    POOL (266)
    THEN (267) 29
    WHILE (268)
    CASE (269) 32
    ESAC (270) 32
    OF (271) 32
    DARROW (272) 46
    NEW (273) 33
    ISVOID (274) 34
    STR_CONST <symbol> (275) 21
    INT_CONST <symbol> (276) 22
    BOOL_CONST <boolean> (277) 23
    TYPEID <symbol> (278) 5 8 9 14 28 33 46 51
    OBJECTID <symbol> (279) 8 9 14 24 25 26 27 28 46 51
    ASSIGN (280) 25 53
    NOT (281) 42
    LE (282) 41
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <program> (45)
        on left: 1
        on right: 0
    class_list <classes> (46)
        on left: 2 3 4
        on right: 1 3
    class <class_> (47)
        on left: 5
        on right: 2 3 4
    feature_list <features> (48)
        on left: 6 7
        on right: 5 7
    feature <feature> (49)
        on left: 8 9 10
        on right: 7
    formal_list <formals> (50)
        on left: 11 12 13
        on right: 9 13
    formal <formal> (51)
        on left: 14
        on right: 12 13
    expr_list_comma <expressions> (52)
        on left: 15 16 17
        on right: 17 26 27 28
    expr_list_simicolon <expressions> (53)
        on left: 18 19 20
        on right: 19 30
    expr <expression> (54)
        on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 9 16 17 18 19 25 26 28 29 32 34 35 36 37 38 39 40 41 42 43 46 47 53
    case_list <cases> (55)
        on left: 44 45
        on right: 32 45
    case <case_> (56)
        on left: 46
        on right: 45
    let_expr <expression> (57)
        on left: 47
        on right: 31
    let_binding_list <expression> (58)
        on left: 48 49 50
        on right: 47 49
    let_binding <expression> (59)
        on left: 51
        on right: 48 49 50
    optional_assign <expression> (60)
        on left: 52 53
        on right: 8 51


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


State 1

    4 class_list: error • ';' class

    ';'  shift, and go to state 6


State 2

    5 class: CLASS • TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 7


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    1 program: class_list •
    3 class_list: class_list • class

    CLASS  shift, and go to state 2

    $default  reduce using rule 1 (program)

    class  go to state 9


State 5

    2 class_list: class •

    $default  reduce using rule 2 (class_list)


State 6

    4 class_list: error ';' • class

    CLASS  shift, and go to state 2

    class  go to state 10


State 7

    5 class: CLASS TYPEID • '{' feature_list '}' ';'

    '{'  shift, and go to state 11


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 class_list: class_list class •

    $default  reduce using rule 3 (class_list)


State 10

    4 class_list: error ';' class •

    $default  reduce using rule 4 (class_list)


State 11

    5 class: CLASS TYPEID '{' • feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12


State 12

    5 class: CLASS TYPEID '{' feature_list • '}' ';'
    7 feature_list: feature_list • feature

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 15

    feature  go to state 16


State 13

   10 feature: error • ';'

    ';'  shift, and go to state 17


State 14

    8 feature: OBJECTID • ':' TYPEID optional_assign ';'
    9        | OBJECTID • '(' formal_list ')' ':' TYPEID '{' expr '}' ';'

    ':'  shift, and go to state 18
    '('  shift, and go to state 19


State 15

    5 class: CLASS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 20


State 16

    7 feature_list: feature_list feature •

    $default  reduce using rule 7 (feature_list)


State 17

   10 feature: error ';' •

    $default  reduce using rule 10 (feature)


State 18

    8 feature: OBJECTID ':' • TYPEID optional_assign ';'

    TYPEID  shift, and go to state 21


State 19

    9 feature: OBJECTID '(' • formal_list ')' ':' TYPEID '{' expr '}' ';'

    OBJECTID  shift, and go to state 22

    $default  reduce using rule 11 (formal_list)

    formal_list  go to state 23
    formal       go to state 24


State 20

    5 class: CLASS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 5 (class)


State 21

    8 feature: OBJECTID ':' TYPEID • optional_assign ';'

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 52 (optional_assign)

    optional_assign  go to state 26


State 22

   14 formal: OBJECTID • ':' TYPEID

    ':'  shift, and go to state 27


State 23

    9 feature: OBJECTID '(' formal_list • ')' ':' TYPEID '{' expr '}' ';'
   13 formal_list: formal_list • ',' formal

    ')'  shift, and go to state 28
    ','  shift, and go to state 29


State 24

   12 formal_list: formal •

    $default  reduce using rule 12 (formal_list)


State 25

   53 optional_assign: ASSIGN • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 43
    let_expr  go to state 44


State 26

    8 feature: OBJECTID ':' TYPEID optional_assign • ';'

    ';'  shift, and go to state 45


State 27

   14 formal: OBJECTID ':' • TYPEID

    TYPEID  shift, and go to state 46


State 28

    9 feature: OBJECTID '(' formal_list ')' • ':' TYPEID '{' expr '}' ';'

    ':'  shift, and go to state 47


State 29

   13 formal_list: formal_list ',' • formal

    OBJECTID  shift, and go to state 22

    formal  go to state 48


State 30

   29 expr: IF • expr THEN expr ELSE expr FI

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 49
    let_expr  go to state 44


State 31

   47 let_expr: LET • let_binding_list IN expr

    error     shift, and go to state 50
    OBJECTID  shift, and go to state 51

    let_binding_list  go to state 52
    let_binding       go to state 53


State 32

   32 expr: CASE • expr OF case_list ESAC

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 54
    let_expr  go to state 44


State 33

   33 expr: NEW • TYPEID

    TYPEID  shift, and go to state 55


State 34

   34 expr: ISVOID • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 56
    let_expr  go to state 44


State 35

   21 expr: STR_CONST •

    $default  reduce using rule 21 (expr)


State 36

   22 expr: INT_CONST •

    $default  reduce using rule 22 (expr)


State 37

   23 expr: BOOL_CONST •

    $default  reduce using rule 23 (expr)


State 38

   24 expr: OBJECTID •
   25     | OBJECTID • ASSIGN expr
   27     | OBJECTID • '(' expr_list_comma ')'

    ASSIGN  shift, and go to state 57
    '('     shift, and go to state 58

    $default  reduce using rule 24 (expr)


State 39

   42 expr: NOT • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 59
    let_expr  go to state 44


State 40

   38 expr: '~' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 60
    let_expr  go to state 44


State 41

   30 expr: '{' • expr_list_simicolon '}'

    error       shift, and go to state 61
    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr_list_simicolon  go to state 62
    expr                 go to state 63
    let_expr             go to state 44


State 42

   43 expr: '(' • expr ')'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 64
    let_expr  go to state 44


State 43

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr
   53 optional_assign: ASSIGN expr •

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 53 (optional_assign)


State 44

   31 expr: let_expr •

    $default  reduce using rule 31 (expr)


State 45

    8 feature: OBJECTID ':' TYPEID optional_assign ';' •

    $default  reduce using rule 8 (feature)


State 46

   14 formal: OBJECTID ':' TYPEID •

    $default  reduce using rule 14 (formal)


State 47

    9 feature: OBJECTID '(' formal_list ')' ':' • TYPEID '{' expr '}' ';'

    TYPEID  shift, and go to state 73


State 48

   13 formal_list: formal_list ',' formal •

    $default  reduce using rule 13 (formal_list)


State 49

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   29     | IF expr • THEN expr ELSE expr FI
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    THEN  shift, and go to state 74
    LE    shift, and go to state 65
    '<'   shift, and go to state 66
    '='   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '@'   shift, and go to state 71
    '.'   shift, and go to state 72


State 50

   50 let_binding_list: error • ',' let_binding

    ','  shift, and go to state 75


State 51

   51 let_binding: OBJECTID • ':' TYPEID optional_assign

    ':'  shift, and go to state 76


State 52

   47 let_expr: LET let_binding_list • IN expr
   49 let_binding_list: let_binding_list • ',' let_binding

    IN   shift, and go to state 77
    ','  shift, and go to state 78


State 53

   48 let_binding_list: let_binding •

    $default  reduce using rule 48 (let_binding_list)


State 54

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   32     | CASE expr • OF case_list ESAC
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    OF   shift, and go to state 79
    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72


State 55

   33 expr: NEW TYPEID •

    $default  reduce using rule 33 (expr)


State 56

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   34     | ISVOID expr •
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 34 (expr)


State 57

   25 expr: OBJECTID ASSIGN • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 80
    let_expr  go to state 44


State 58

   27 expr: OBJECTID '(' • expr_list_comma ')'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    $default  reduce using rule 15 (expr_list_comma)

    expr_list_comma  go to state 81
    expr             go to state 82
    let_expr         go to state 44


State 59

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr
   42     | NOT expr •

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 42 (expr)


State 60

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   38     | '~' expr •
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 38 (expr)


State 61

   20 expr_list_simicolon: error • ';'

    ';'  shift, and go to state 83


State 62

   19 expr_list_simicolon: expr_list_simicolon • expr ';'
   30 expr: '{' expr_list_simicolon • '}'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '}'         shift, and go to state 84
    '('         shift, and go to state 42

    expr      go to state 85
    let_expr  go to state 44


State 63

   18 expr_list_simicolon: expr • ';'
   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 86


State 64

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr
   43     | '(' expr • ')'

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ')'  shift, and go to state 87


State 65

   41 expr: expr LE • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 88
    let_expr  go to state 44


State 66

   39 expr: expr '<' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 89
    let_expr  go to state 44


State 67

   40 expr: expr '=' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 90
    let_expr  go to state 44


State 68

   35 expr: expr '+' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 91
    let_expr  go to state 44


State 69

   36 expr: expr '-' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 92
    let_expr  go to state 44


State 70

   37 expr: expr '*' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 93
    let_expr  go to state 44


State 71

   28 expr: expr '@' • TYPEID '.' OBJECTID '(' expr_list_comma ')'

    TYPEID  shift, and go to state 94


State 72

   26 expr: expr '.' • OBJECTID '(' expr_list_comma ')'

    OBJECTID  shift, and go to state 95


State 73

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID • '{' expr '}' ';'

    '{'  shift, and go to state 96


State 74

   29 expr: IF expr THEN • expr ELSE expr FI

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 97
    let_expr  go to state 44


State 75

   50 let_binding_list: error ',' • let_binding

    OBJECTID  shift, and go to state 51

    let_binding  go to state 98


State 76

   51 let_binding: OBJECTID ':' • TYPEID optional_assign

    TYPEID  shift, and go to state 99


State 77

   47 let_expr: LET let_binding_list IN • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 100
    let_expr  go to state 44


State 78

   49 let_binding_list: let_binding_list ',' • let_binding

    OBJECTID  shift, and go to state 51

    let_binding  go to state 101


State 79

   32 expr: CASE expr OF • case_list ESAC

    $default  reduce using rule 44 (case_list)

    case_list  go to state 102


State 80

   25 expr: OBJECTID ASSIGN expr •
   26     | expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 25 (expr)


State 81

   17 expr_list_comma: expr_list_comma • ',' expr
   27 expr: OBJECTID '(' expr_list_comma • ')'

    ')'  shift, and go to state 103
    ','  shift, and go to state 104


State 82

   16 expr_list_comma: expr •
   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 16 (expr_list_comma)


State 83

   20 expr_list_simicolon: error ';' •

    $default  reduce using rule 20 (expr_list_simicolon)


State 84

   30 expr: '{' expr_list_simicolon '}' •

    $default  reduce using rule 30 (expr)


State 85

   19 expr_list_simicolon: expr_list_simicolon expr • ';'
   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 105


State 86

   18 expr_list_simicolon: expr ';' •

    $default  reduce using rule 18 (expr_list_simicolon)


State 87

   43 expr: '(' expr ')' •

    $default  reduce using rule 43 (expr)


State 88

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr
   41     | expr LE expr •

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 41 (expr)


State 89

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   39     | expr '<' expr •
   40     | expr • '=' expr
   41     | expr • LE expr

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 39 (expr)


State 90

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   40     | expr '=' expr •
   41     | expr • LE expr

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 40 (expr)


State 91

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   35     | expr '+' expr •
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 35 (expr)


State 92

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   36     | expr '-' expr •
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 36 (expr)


State 93

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   37     | expr '*' expr •
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 37 (expr)


State 94

   28 expr: expr '@' TYPEID • '.' OBJECTID '(' expr_list_comma ')'

    '.'  shift, and go to state 106


State 95

   26 expr: expr '.' OBJECTID • '(' expr_list_comma ')'

    '('  shift, and go to state 107


State 96

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' • expr '}' ';'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 108
    let_expr  go to state 44


State 97

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   29     | IF expr THEN expr • ELSE expr FI
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    ELSE  shift, and go to state 109
    LE    shift, and go to state 65
    '<'   shift, and go to state 66
    '='   shift, and go to state 67
    '+'   shift, and go to state 68
    '-'   shift, and go to state 69
    '*'   shift, and go to state 70
    '@'   shift, and go to state 71
    '.'   shift, and go to state 72


State 98

   50 let_binding_list: error ',' let_binding •

    $default  reduce using rule 50 (let_binding_list)


State 99

   51 let_binding: OBJECTID ':' TYPEID • optional_assign

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 52 (optional_assign)

    optional_assign  go to state 110


State 100

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr
   47 let_expr: LET let_binding_list IN expr •

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 47 (let_expr)


State 101

   49 let_binding_list: let_binding_list ',' let_binding •

    $default  reduce using rule 49 (let_binding_list)


State 102

   32 expr: CASE expr OF case_list • ESAC
   45 case_list: case_list • case

    ESAC      shift, and go to state 111
    OBJECTID  shift, and go to state 112

    case  go to state 113


State 103

   27 expr: OBJECTID '(' expr_list_comma ')' •

    $default  reduce using rule 27 (expr)


State 104

   17 expr_list_comma: expr_list_comma ',' • expr

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 114
    let_expr  go to state 44


State 105

   19 expr_list_simicolon: expr_list_simicolon expr ';' •

    $default  reduce using rule 19 (expr_list_simicolon)


State 106

   28 expr: expr '@' TYPEID '.' • OBJECTID '(' expr_list_comma ')'

    OBJECTID  shift, and go to state 115


State 107

   26 expr: expr '.' OBJECTID '(' • expr_list_comma ')'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    $default  reduce using rule 15 (expr_list_comma)

    expr_list_comma  go to state 116
    expr             go to state 82
    let_expr         go to state 44


State 108

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr • '}' ';'
   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    '}'  shift, and go to state 117


State 109

   29 expr: IF expr THEN expr ELSE • expr FI

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 118
    let_expr  go to state 44


State 110

   51 let_binding: OBJECTID ':' TYPEID optional_assign •

    $default  reduce using rule 51 (let_binding)


State 111

   32 expr: CASE expr OF case_list ESAC •

    $default  reduce using rule 32 (expr)


State 112

   46 case: OBJECTID • ':' TYPEID DARROW expr ';'

    ':'  shift, and go to state 119


State 113

   45 case_list: case_list case •

    $default  reduce using rule 45 (case_list)


State 114

   17 expr_list_comma: expr_list_comma ',' expr •
   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72

    $default  reduce using rule 17 (expr_list_comma)


State 115

   28 expr: expr '@' TYPEID '.' OBJECTID • '(' expr_list_comma ')'

    '('  shift, and go to state 120


State 116

   17 expr_list_comma: expr_list_comma • ',' expr
   26 expr: expr '.' OBJECTID '(' expr_list_comma • ')'

    ')'  shift, and go to state 121
    ','  shift, and go to state 104


State 117

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' • ';'

    ';'  shift, and go to state 122


State 118

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   29     | IF expr THEN expr ELSE expr • FI
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr

    FI   shift, and go to state 123
    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72


State 119

   46 case: OBJECTID ':' • TYPEID DARROW expr ';'

    TYPEID  shift, and go to state 124


State 120

   28 expr: expr '@' TYPEID '.' OBJECTID '(' • expr_list_comma ')'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    $default  reduce using rule 15 (expr_list_comma)

    expr_list_comma  go to state 125
    expr             go to state 82
    let_expr         go to state 44


State 121

   26 expr: expr '.' OBJECTID '(' expr_list_comma ')' •

    $default  reduce using rule 26 (expr)


State 122

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' ';' •

    $default  reduce using rule 9 (feature)


State 123

   29 expr: IF expr THEN expr ELSE expr FI •

    $default  reduce using rule 29 (expr)


State 124

   46 case: OBJECTID ':' TYPEID • DARROW expr ';'

    DARROW  shift, and go to state 126


State 125

   17 expr_list_comma: expr_list_comma • ',' expr
   28 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma • ')'

    ')'  shift, and go to state 127
    ','  shift, and go to state 104


State 126

   46 case: OBJECTID ':' TYPEID DARROW • expr ';'

    IF          shift, and go to state 30
    LET         shift, and go to state 31
    CASE        shift, and go to state 32
    NEW         shift, and go to state 33
    ISVOID      shift, and go to state 34
    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38
    NOT         shift, and go to state 39
    '~'         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42

    expr      go to state 128
    let_expr  go to state 44


State 127

   28 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' •

    $default  reduce using rule 28 (expr)


State 128

   26 expr: expr • '.' OBJECTID '(' expr_list_comma ')'
   28     | expr • '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   35     | expr • '+' expr
   36     | expr • '-' expr
   37     | expr • '*' expr
   39     | expr • '<' expr
   40     | expr • '=' expr
   41     | expr • LE expr
   46 case: OBJECTID ':' TYPEID DARROW expr • ';'

    LE   shift, and go to state 65
    '<'  shift, and go to state 66
    '='  shift, and go to state 67
    '+'  shift, and go to state 68
    '-'  shift, and go to state 69
    '*'  shift, and go to state 70
    '@'  shift, and go to state 71
    '.'  shift, and go to state 72
    ';'  shift, and go to state 129


State 129

   46 case: OBJECTID ':' TYPEID DARROW expr ';' •

    $default  reduce using rule 46 (case)
